{"name": "Check whether all the headers of the list are available or not", "status": "broken", "statusDetails": {"message": "\nYou can implement step definitions for undefined steps with these snippets:\n\n@given(u'Get all the headers of the list in the Dashboard page')\ndef step_impl(context):\n    raise NotImplementedError(u'STEP: Given Get all the headers of the list in the Dashboard page')\n\n"}, "steps": [{"name": "Given I open a browser and open RBAC Login page", "status": "passed", "start": 1712748331103, "stop": 1712748331565}, {"name": "When I click on sign in RBAC link", "status": "passed", "start": 1712748331565, "stop": 1712748341683}, {"name": "Then I enter the username and password to RBAC as tlsapp", "status": "passed", "start": 1712748341683, "stop": 1712748351816}, {"name": "And click on PymetrikosUI app", "status": "passed", "start": 1712748351816, "stop": 1712748354038}, {"name": "Given Get all the headers of the list in the Dashboard page", "status": "broken", "statusDetails": {"message": "\nYou can implement step definitions for undefined steps with these snippets:\n\n@given(u'Get all the headers of the list in the Dashboard page')\ndef step_impl(context):\n    raise NotImplementedError(u'STEP: Given Get all the headers of the list in the Dashboard page')\n\n"}, "start": 1712748354038, "stop": 1712748354038}, {"name": "Then Check whether all the required headers are available or not", "status": "broken", "statusDetails": {"message": "\nYou can implement step definitions for undefined steps with these snippets:\n\n@then(u'Check whether all the required headers are available or not')\ndef step_impl(context):\n    raise NotImplementedError(u'STEP: Then Check whether all the required headers are available or not')\n\n"}, "start": 1712748354039, "stop": 1712748354039}], "start": 1712748331100, "stop": 1712748354039, "uuid": "b286ec0f-2063-4bb0-b530-d4c849445ba0", "historyId": "6f99b559a3c89557333eae5563c1e073", "fullName": "UI test cases: Check whether all the headers of the list are available or not", "labels": [{"name": "severity", "value": "normal"}, {"name": "tag", "value": "headers_list_smoke"}, {"name": "tag", "value": "smoke"}, {"name": "feature", "value": "UI test cases"}, {"name": "framework", "value": "behave"}, {"name": "language", "value": "cpython3"}]}